// Generated from c:\Users\User\Documents\LS4Pv3\server\grammar\JavaClassLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class JavaClassLexer extends Lexer {
	public static readonly BYTE = 1;
	public static readonly CHAR = 2;
	public static readonly DOUBLE = 3;
	public static readonly FLOAT = 4;
	public static readonly INT = 5;
	public static readonly LONG = 6;
	public static readonly SHORT = 7;
	public static readonly BOOLEAN = 8;
	public static readonly VOID = 9;
	public static readonly ARRAY_PREFIX = 10;
	public static readonly LPAREN = 11;
	public static readonly RPAREN = 12;
	public static readonly LT = 13;
	public static readonly GT = 14;
	public static readonly DOT = 15;
	public static readonly ASTERIX = 16;
	public static readonly ADD = 17;
	public static readonly SUB = 18;
	public static readonly CARET = 19;
	public static readonly COLON = 20;
	public static readonly WS = 21;
	public static readonly IDENTIFIER = 22;
	public static readonly CLASS_PREFIX = 23;
	public static readonly GEN_PREFIX = 24;
	public static readonly GEN_ID = 25;
	public static readonly GEN_SEMI = 26;
	public static readonly CLASSID = 27;
	public static readonly CLASSDIV = 28;
	public static readonly CLASSSEMI = 29;
	public static readonly GenericMode = 1;
	public static readonly ClassMode = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "GenericMode", "ClassMode",
	];

	public static readonly ruleNames: string[] = [
		"BYTE", "CHAR", "DOUBLE", "FLOAT", "INT", "LONG", "SHORT", "BOOLEAN", 
		"VOID", "ARRAY_PREFIX", "LPAREN", "RPAREN", "LT", "GT", "DOT", "ASTERIX", 
		"ADD", "SUB", "CARET", "COLON", "WS", "IDENTIFIER", "CLASS_PREFIX", "GEN_PREFIX", 
		"GEN_ID", "GEN_SEMI", "CLASSID", "CLASSDIV", "CLASSSEMI", "CL", "DIV", 
		"ID", "SEMI", "LetterOrDigit", "Letter",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'B'", "'C'", "'D'", "'F'", "'I'", "'J'", "'S'", "'Z'", "'V'", 
		"'['", "'('", "')'", "'<'", "'>'", "'.'", "'*'", "'+'", "'-'", "'^'", 
		"':'", undefined, undefined, "'L'", "'T'", undefined, undefined, undefined, 
		"'/'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "BYTE", "CHAR", "DOUBLE", "FLOAT", "INT", "LONG", "SHORT", 
		"BOOLEAN", "VOID", "ARRAY_PREFIX", "LPAREN", "RPAREN", "LT", "GT", "DOT", 
		"ASTERIX", "ADD", "SUB", "CARET", "COLON", "WS", "IDENTIFIER", "CLASS_PREFIX", 
		"GEN_PREFIX", "GEN_ID", "GEN_SEMI", "CLASSID", "CLASSDIV", "CLASSSEMI",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(JavaClassLexer._LITERAL_NAMES, JavaClassLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return JavaClassLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(JavaClassLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "JavaClassLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return JavaClassLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return JavaClassLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return JavaClassLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return JavaClassLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1F\xA3\b\x01" +
		"\b\x01\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04" +
		"\x06\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f" +
		"\t\f\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11" +
		"\x04\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16" +
		"\x04\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B" +
		"\x04\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!" +
		"\t!\x04\"\t\"\x04#\t#\x04$\t$\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04" +
		"\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03" +
		"\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E" +
		"\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13" +
		"\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x06\x16u\n\x16\r\x16" +
		"\x0E\x16v\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03" +
		"\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03" +
		"\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03" +
		"\x1F\x03 \x03 \x03!\x03!\x07!\x97\n!\f!\x0E!\x9A\v!\x03\"\x03\"\x03#\x03" +
		"#\x05#\xA0\n#\x03$\x03$\x02\x02\x02%\x05\x02\x03\x07\x02\x04\t\x02\x05" +
		"\v\x02\x06\r\x02\x07\x0F\x02\b\x11\x02\t\x13\x02\n\x15\x02\v\x17\x02\f" +
		"\x19\x02\r\x1B\x02\x0E\x1D\x02\x0F\x1F\x02\x10!\x02\x11#\x02\x12%\x02" +
		"\x13\'\x02\x14)\x02\x15+\x02\x16-\x02\x17/\x02\x181\x02\x193\x02\x1A5" +
		"\x02\x1B7\x02\x1C9\x02\x1D;\x02\x1E=\x02\x1F?\x02\x02A\x02\x02C\x02\x02" +
		"E\x02\x02G\x02\x02I\x02\x02\x05\x02\x03\x04\x05\x05\x02\v\f\x0E\x0F\"" +
		"\"\x03\x022;\x06\x02&&C\\aac|\x02\x9D\x02\x05\x03\x02\x02\x02\x02\x07" +
		"\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03" +
		"\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03" +
		"\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03" +
		"\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03" +
		"\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02" +
		"\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02" +
		"-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
		"\x02\x02\x035\x03\x02\x02\x02\x037\x03\x02\x02\x02\x049\x03\x02\x02\x02" +
		"\x04;\x03\x02\x02\x02\x04=\x03\x02\x02\x02\x05K\x03\x02\x02\x02\x07M\x03" +
		"\x02\x02\x02\tO\x03\x02\x02\x02\vQ\x03\x02\x02\x02\rS\x03\x02\x02\x02" +
		"\x0FU\x03\x02\x02\x02\x11W\x03\x02\x02\x02\x13Y\x03\x02\x02\x02\x15[\x03" +
		"\x02\x02\x02\x17]\x03\x02\x02\x02\x19_\x03\x02\x02\x02\x1Ba\x03\x02\x02" +
		"\x02\x1Dc\x03\x02\x02\x02\x1Fe\x03\x02\x02\x02!g\x03\x02\x02\x02#i\x03" +
		"\x02\x02\x02%k\x03\x02\x02\x02\'m\x03\x02\x02\x02)o\x03\x02\x02\x02+q" +
		"\x03\x02\x02\x02-t\x03\x02\x02\x02/x\x03\x02\x02\x021z\x03\x02\x02\x02" +
		"3~\x03\x02\x02\x025\x82\x03\x02\x02\x027\x84\x03\x02\x02\x029\x88\x03" +
		"\x02\x02\x02;\x8A\x03\x02\x02\x02=\x8C\x03\x02\x02\x02?\x90\x03\x02\x02" +
		"\x02A\x92\x03\x02\x02\x02C\x94\x03\x02\x02\x02E\x9B\x03\x02\x02\x02G\x9F" +
		"\x03\x02\x02\x02I\xA1\x03\x02\x02\x02KL\x07D\x02\x02L\x06\x03\x02\x02" +
		"\x02MN\x07E\x02\x02N\b\x03\x02\x02\x02OP\x07F\x02\x02P\n\x03\x02\x02\x02" +
		"QR\x07H\x02\x02R\f\x03\x02\x02\x02ST\x07K\x02\x02T\x0E\x03\x02\x02\x02" +
		"UV\x07L\x02\x02V\x10\x03\x02\x02\x02WX\x07U\x02\x02X\x12\x03\x02\x02\x02" +
		"YZ\x07\\\x02\x02Z\x14\x03\x02\x02\x02[\\\x07X\x02\x02\\\x16\x03\x02\x02" +
		"\x02]^\x07]\x02\x02^\x18\x03\x02\x02\x02_`\x07*\x02\x02`\x1A\x03\x02\x02" +
		"\x02ab\x07+\x02\x02b\x1C\x03\x02\x02\x02cd\x07>\x02\x02d\x1E\x03\x02\x02" +
		"\x02ef\x07@\x02\x02f \x03\x02\x02\x02gh\x070\x02\x02h\"\x03\x02\x02\x02" +
		"ij\x07,\x02\x02j$\x03\x02\x02\x02kl\x07-\x02\x02l&\x03\x02\x02\x02mn\x07" +
		"/\x02\x02n(\x03\x02\x02\x02op\x07`\x02\x02p*\x03\x02\x02\x02qr\x07<\x02" +
		"\x02r,\x03\x02\x02\x02su\t\x02\x02\x02ts\x03\x02\x02\x02uv\x03\x02\x02" +
		"\x02vt\x03\x02\x02\x02vw\x03\x02\x02\x02w.\x03\x02\x02\x02xy\x05C!\x02" +
		"y0\x03\x02\x02\x02z{\x07N\x02\x02{|\x03\x02\x02\x02|}\b\x18\x02\x02}2" +
		"\x03\x02\x02\x02~\x7F\x07V\x02\x02\x7F\x80\x03\x02\x02\x02\x80\x81\b\x19" +
		"\x03\x02\x814\x03\x02\x02\x02\x82\x83\x05C!\x02\x836\x03\x02\x02\x02\x84" +
		"\x85\x07=\x02\x02\x85\x86\x03\x02\x02\x02\x86\x87\b\x1B\x04\x02\x878\x03" +
		"\x02\x02\x02\x88\x89\x05C!\x02\x89:\x03\x02\x02\x02\x8A\x8B\x071\x02\x02" +
		"\x8B<\x03\x02\x02\x02\x8C\x8D\x07=\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E" +
		"\x8F\b\x1E\x04\x02\x8F>\x03\x02\x02\x02\x90\x91\x07N\x02\x02\x91@\x03" +
		"\x02\x02\x02\x92\x93\x071\x02\x02\x93B\x03\x02\x02\x02\x94\x98\x05I$\x02" +
		"\x95\x97\x05G#\x02\x96\x95\x03\x02\x02\x02\x97\x9A\x03\x02\x02\x02\x98" +
		"\x96\x03\x02\x02\x02\x98\x99\x03\x02\x02\x02\x99D\x03\x02\x02\x02\x9A" +
		"\x98\x03\x02\x02\x02\x9B\x9C\x07=\x02\x02\x9CF\x03\x02\x02\x02\x9D\xA0" +
		"\x05I$\x02\x9E\xA0\t\x03\x02\x02\x9F\x9D\x03\x02\x02\x02\x9F\x9E\x03\x02" +
		"\x02\x02\xA0H\x03\x02\x02\x02\xA1\xA2\t\x04\x02\x02\xA2J\x03\x02\x02\x02" +
		"\b\x02\x03\x04v\x98\x9F\x05\x07\x04\x02\x07\x03\x02\x06\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!JavaClassLexer.__ATN) {
			JavaClassLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(JavaClassLexer._serializedATN));
		}

		return JavaClassLexer.__ATN;
	}

}

